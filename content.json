{"meta":{"title":"怒涛卷霜雪  天堑无涯","subtitle":"","description":"test description","author":"吴涛","url":"http://yoursite.com","root":"/"},"pages":[{"title":"Page","date":"2013-12-26T14:52:56.000Z","updated":"2023-04-30T06:59:49.463Z","comments":true,"path":"page/index.html","permalink":"http://yoursite.com/page/index.html","excerpt":"","text":"This is a page test."},{"title":"所有标签","date":"2023-04-30T08:10:36.359Z","updated":"2023-04-30T08:10:36.359Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""},{"title":"","date":"2023-04-30T08:10:03.888Z","updated":"2023-04-30T08:10:03.888Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":"一名小小大学生的小博客"},{"title":"我的朋友们","date":"2023-04-30T08:10:52.817Z","updated":"2023-04-30T08:10:52.817Z","comments":true,"path":"friends/index.html","permalink":"http://yoursite.com/friends/index.html","excerpt":"这里写友链上方的内容。","text":"这里写友链上方的内容。 这里可以写友链页面下方的文字备注，例如自己的友链规范、示例等。"},{"title":"所有分类","date":"2023-04-30T08:10:22.183Z","updated":"2023-04-30T08:10:22.183Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"typora+picgo上床图片报错","slug":"typora+picgo图床","date":"2023-05-09T16:00:00.000Z","updated":"2023-05-20T20:19:47.944Z","comments":true,"path":"2023/05/10/typora+picgo图床/","link":"","permalink":"http://yoursite.com/2023/05/10/typora+picgo%E5%9B%BE%E5%BA%8A/","excerpt":"","text":"error1&quot;success&quot;.false, &quot;message&quot;.&quot;upload error. see C.Users\\lAdministratorlAppDatallRoamingllpicgollpicgo.log for more picgo日志： 1234567891011------Error Stack Begin------Error: read file E:\\Boke\\source\\_posts\\C:\\Users\\wutao\\AppData\\Roaming\\Typora\\typora-user-images\\image-20230521041042868.png error at D:\\application\\tools\\PicGo\\resources\\app.asar\\node_modules\\picgo\\dist\\index.cjs.js:1:38189 at async Promise.all (index 0) at async Object.handle (D:\\application\\tools\\PicGo\\resources\\app.asar\\node_modules\\picgo\\dist\\index.cjs.js:1:37138) at async $e.doTransform (D:\\application\\tools\\PicGo\\resources\\app.asar\\node_modules\\picgo\\dist\\index.cjs.js:1:16679) at async $e.start (D:\\application\\tools\\PicGo\\resources\\app.asar\\node_modules\\picgo\\dist\\index.cjs.js:1:15916) at async Tt.upload (D:\\application\\tools\\PicGo\\resources\\app.asar\\node_modules\\picgo\\dist\\index.cjs.js:1:71270) at async Object.upload (D:\\application\\tools\\PicGo\\resources\\app.asar\\background.js:2:653584) at async jn (D:\\application\\tools\\PicGo\\resources\\app.asar\\background.js:2:656251) at async D:\\application\\tools\\PicGo\\resources\\app.asar\\background.js:2:657340 解决办法： 直接在hexo的_post文件夹中写markdown会传不上去图片，但是在外面写可以正常上传图片，所以可以在外面写好了在放信hexo中","categories":[{"name":"bugs","slug":"bugs","permalink":"http://yoursite.com/categories/bugs/"}],"tags":[{"name":"picgo","slug":"picgo","permalink":"http://yoursite.com/tags/picgo/"}]},{"title":"李沐说读论文","slug":"李沐读论文","date":"2023-05-02T16:00:00.000Z","updated":"2023-05-02T16:18:51.776Z","comments":true,"path":"2023/05/03/李沐读论文/","link":"","permalink":"http://yoursite.com/2023/05/03/%E6%9D%8E%E6%B2%90%E8%AF%BB%E8%AE%BA%E6%96%87/","excerpt":"","text":"title abstract introduction method experiments conclusion 第一遍：标题、摘要、结论。可以看一看方法和实验部分重要的图和表。这样可以花费十几分钟时间了解到论文是否适合你的研究方向。第二遍：确定论文值得读之后，可以快速的把整个论文过一遍，不需要知道所有的细节，需要了解重要的图和表，知道每一个部分在干什么，圈出相关文献。觉得文章太难，可以读引用的文献。第三遍：提出什么问题，用什么方法来解决这个问题。实验是怎么做的。合上文章，回忆每一个部分在讲什么。","categories":[{"name":"论文","slug":"论文","permalink":"http://yoursite.com/categories/%E8%AE%BA%E6%96%87/"},{"name":"算法","slug":"论文/算法","permalink":"http://yoursite.com/categories/%E8%AE%BA%E6%96%87/%E7%AE%97%E6%B3%95/"}],"tags":[{"name":"论文","slug":"论文","permalink":"http://yoursite.com/tags/%E8%AE%BA%E6%96%87/"}]},{"title":"centos7安装Mysql初始密码问题","slug":"centos7安装Mysql初始密码问题","date":"2023-05-02T16:00:00.000Z","updated":"2023-05-20T21:13:30.249Z","comments":true,"path":"2023/05/03/centos7安装Mysql初始密码问题/","link":"","permalink":"http://yoursite.com/2023/05/03/centos7%E5%AE%89%E8%A3%85Mysql%E5%88%9D%E5%A7%8B%E5%AF%86%E7%A0%81%E9%97%AE%E9%A2%98/","excerpt":"","text":"一般来说，centos7暗转MySQL，可以直接使用yum -y install mysql来实现，但是突然碰到了不知道初始root密码的问题，记录一下解决过程 网上都会说grep ‘temporary password’ /var/log/mysqld.log就可以查看临时密码，但是系统却说 No such file of directory 解决方法 查看是否安装了mysql服务（有则自行卸载删除）。 12yum list installed mysql* rpm –qa|grep mysql* 查看服务器上是否有现成的安装包。 1yum list mysql* 去mysql官网的yum资源库找到对应的rpm文件的下载链接 在linux中下载、安装yum资源。 1rpm -ivh 资源下载链接(https://dev.mysql.com/get/mysql80-community-release-el7-3.noarch.rpm) 查看当前mysql的当前版本 1yum info mysql-community-server 安装mysql 1yum -y install mysql-community-server 注：如果出现 原因是Mysql的GPG升级了，需要重新获取 1rpm --import https://repo.mysql.com/RPM-GPG-KEY-mysql-2022 MySQL安装完成如下： 安装完成后，启动MySQL 12systemctl start mysqldsystemctl status mysqld // 检查MySQL状态 查询mysql初始密码 1grep ‘temporary password’ /var/log/mysqld.log 修改密码 1mysqladmin -u root -p password Access denied for user ‘root‘@’localhost’ (using password: YES)报错 1、关闭mysql服务 service mysqld stop 2、找到&#x2F;etc&#x2F;my.cnf ,在最后一行添加skip-grant-tables（用于免密码登录） vim &#x2F;etc&#x2F;my.cnf 3、重启mysql服务 service mysqld start 4、正常登录mysql（不使用密码） mysql -u root 123456789mysql&gt; show databases;mysql&gt; use mysql;mysql&gt; ALTER USER &#x27;用户名&#x27;@&#x27;localhost&#x27; IDENTIFIED WITH mysql_native_password BY &#x27;新密码&#x27;;mysql&gt; flush privileges; --刷新MySQL的系统权限相关表mysql&gt; exit; 5、找到&#x2F;etc&#x2F;my.cnf ,删除skip-grant-table6、重启mysql服务service mysqld restart7、正常登录测试mysql -u root -p 就可以了 备注：root账号一般只添加了localhost访问(这是推荐的)，如若调试阶段不想通过ssh跳板连接，建议开个新账号。 步骤1：查看root账号的ip访问权限（执行结果：localhost和127.0.0.1，是无法从外部连接的） 1select user,host,plugin from user; 1SELECT host FROM mysql.user WHERE User = &#x27;root&#x27;; 步骤2：新建账号并指定密码和ip（使用 % 通配符表示允许任何ip访问） 1CREATE USER &#x27;my_name&#x27;@&#x27;%&#x27; IDENTIFIED BY &#x27;my_password&#x27;;GRANT ALL PRIVILEGES ON *.* TO &#x27;my_name&#x27;@&#x27;%&#x27;; 步骤3：刷新配置 1FLUSH PRIVILEGES; 这样my_name就可以不通过ssh跳板直接连接了。","categories":[{"name":"bugs","slug":"bugs","permalink":"http://yoursite.com/categories/bugs/"}],"tags":[{"name":"mysql","slug":"mysql","permalink":"http://yoursite.com/tags/mysql/"}]},{"title":"标题模板","slug":"test","date":"2023-05-01T02:08:40.150Z","updated":"2023-05-02T16:18:26.746Z","comments":true,"path":"2023/05/01/test/","link":"","permalink":"http://yoursite.com/2023/05/01/test/","excerpt":"","text":"1hexo g -d This is a video test post. Youtube Vimeo Headers1234567891011121314# H1## H2### H3#### H4##### H5###### H6Alternatively, for H1 and H2, an underline-ish style:Alt-H1======Alt-H2------ H1H2H3H4H5H6Alternatively, for H1 and H2, an underline-ish style: Alt-H1Alt-H2Emphasis","categories":[{"name":"分类","slug":"分类","permalink":"http://yoursite.com/categories/%E5%88%86%E7%B1%BB/"}],"tags":[{"name":"标签名","slug":"标签名","permalink":"http://yoursite.com/tags/%E6%A0%87%E7%AD%BE%E5%90%8D/"}]},{"title":"暴力和模拟","slug":"暴力和模拟","date":"2023-03-18T16:00:00.000Z","updated":"2023-05-02T02:45:20.121Z","comments":true,"path":"2023/03/19/暴力和模拟/","link":"","permalink":"http://yoursite.com/2023/03/19/%E6%9A%B4%E5%8A%9B%E5%92%8C%E6%A8%A1%E6%8B%9F/","excerpt":"","text":"四方和定理 1234567891011121314151617181920212223242526272829303132333435363738#include &lt;bits/stdc++.h&gt;using namespace std;typedef pair&lt;int, int&gt; PII;const int N = 5e6 + 10;int n;int h[N * 2]; // 小技巧，避免pair，r[c^2+d^2]=c;可以推导出dint main() &#123; cin &gt;&gt; n; memset(h, -1, sizeof h); for (int c = 0; c * c &lt;= n; c++) &#123; for (int d = c; c * c + d * d &lt;= n; d++) &#123; // 必须要更严格的判断条件，c * c + d * d &lt;= n,否则会出意外 int s = c * c + d * d; if (h[s] == -1) &#123; h[s] = c; &#125; &#125; &#125; for (int a = 0; a * a &lt;= n; a++) &#123; for (int b = a; a * a + b * b &lt;= n; b++) &#123; // 必须要更严格的判断条件，a * a+ b * b &lt;= n,否则会出意外 int s = n - a * a - b * b; if (h[s] != -1) &#123; int d = sqrt(s - h[s] * h[s]); printf(&quot;%d %d %d %d\\n&quot;, a, b, h[s], d); return 0; &#125; &#125; &#125; return 0;&#125; 连号区间数 123456789101112131415161718192021222324252627282930313233#include &lt;algorithm&gt;#include &lt;cstdio&gt;#include &lt;cstring&gt;#include &lt;iostream&gt;using namespace std;const int N = 10010;int a[N], tmp[N];int n, cnt = 0;int main() &#123; // https://www.acwing.com/problem/content/1212/ cin &gt;&gt; n; for (int i = 0; i &lt; n; i++) &#123; cin &gt;&gt; a[i]; &#125; for (int i = 0; i &lt; n; i++) &#123; int mav = -1; int miv = 10009; for (int j = i; j &lt; n; j++) &#123; mav = max(mav, a[j]); miv = min(miv, a[j]); if (mav - miv == j - i) &#123; cnt++; &#125; &#125; &#125; cout &lt;&lt; cnt; return 0;&#125; 回文日期 &#x3D;&#x3D;注意&#x3D;&#x3D; 这个题目中有两个枚举的角度，一个是 符合回文数的范围要求，另一个是 符合日期的要求，很容易会想到开始枚举日期，然后想是否满足回文数，但是这种枚举方法很麻烦，可能需要自己写个日历。所以换一个角度，先枚举回文数，再判断是否满足日期的要求，就简单很多，注意getline之前要吸收回车 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950#include &lt;algorithm&gt;#include &lt;cstdio&gt;#include &lt;cstring&gt;#include &lt;iostream&gt;using namespace std;int date1, date2, res = 0;int days[13] = &#123;0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31&#125;;bool check(int date) &#123; // 判断回文数中的月份是否合法 int year, month, day; year = date / 10000; month = date / 100 % 100; day = date % 100; cout &lt;&lt; year &lt;&lt; &quot; &quot; &lt;&lt; month &lt;&lt; &quot; &quot; &lt;&lt; day &lt;&lt; &quot;##\\n&quot;; if (month &lt;= 0 || month &gt; 12) return false; if (day &lt;= 0 || day &gt; days[month] &amp;&amp; month != 2) return false; if (month == 2) &#123; int leap = (year % 400 == 0 || year % 4 == 0 &amp;&amp; year % 100 != 0); if (day &gt; days[month] + leap) return false; &#125; return true;&#125;int main() &#123; // https://www.acwing.com/problem/content/468/ cin &gt;&gt; date1 &gt;&gt; date2; // 首先枚举回文数，只需枚举前面4位数 for (int i = 1000; i &lt; 10000; i++) &#123; int date = i, x = i; while (x) &#123; // 通过前4位数构造回文数 date *= 10; int t = x % 10; date += t; x /= 10; &#125; cout &lt;&lt; date &lt;&lt; endl; if (check(date) &amp;&amp; date &gt;= date1 &amp;&amp; date &lt;= date2) res++; &#125; cout &lt;&lt; res; return 0;&#125; 递增三元组 双指针&#x3D;&#x3D;注意&#x3D;&#x3D; while 循环的指针，一定要判断指针不出界才继续循环 递增三元组 思路：枚举数组B，A， C数组从开头出发，满足 A &lt; B &lt; C，res++ 12345678910111213141516171819202122232425262728293031#include &lt;algorithm&gt;#include &lt;cstdio&gt;#include &lt;cstring&gt;#include &lt;iostream&gt;using namespace std;typedef long long LL;const int N = 1e5 + 10;int n;int a[N], b[N], c[N];signed main() &#123; // https://www.acwing.com/problem/content/description/1238/ cin &gt;&gt; n; for (int i = 0; i &lt; n; i++) scanf(&quot;%d&quot;, &amp;a[i]); for (int i = 0; i &lt; n; i++) scanf(&quot;%d&quot;, &amp;b[i]); for (int i = 0; i &lt; n; i++) scanf(&quot;%d&quot;, &amp;c[i]); sort(a, a + n); sort(b, b + n); sort(c, c + n); LL res = 0, l = 0, r = 0; // l 和 r定义在外面，因为数组排序过后，顺序是固定的，没必要从头开始查找 for (int i = 0; i &lt; n; i++) &#123; while (a[l] &lt; b[i] &amp;&amp; l &lt; n) l++; while (c[r] &lt;= b[i] &amp;&amp; r &lt; n) r++; res += (LL)l * (n - r); &#125; cout &lt;&lt; res &lt;&lt; endl;&#125; 前缀和思路：定义一个数组cnta，cnta[i] 是A中小于i的数的个数，cntc[i] 是C中大于i的数的个数，然后循环遍历数组B，res +&#x3D; A中小于B[i]的数量 × C中大于B[i]的数量 12345678910111213141516171819202122232425262728293031323334353637383940414243#include &lt;algorithm&gt;#include &lt;cstdio&gt;#include &lt;cstring&gt;#include &lt;iostream&gt;using namespace std;typedef long long LL;const int N = 100010;int A[N], B[N], C[N];int cnta[N], cntc[N]; // cnta[i] 是A中小于i的数的个数, cntc[i] 是C中大于i的数的个数int main() &#123; int n; cin &gt;&gt; n; for (int i = 1; i &lt;= n; i++) &#123; scanf(&quot;%d&quot;, &amp;A[i]); cnta[A[i]]++; &#125; for (int i = 1; i &lt;= n; i++) &#123; scanf(&quot;%d&quot;, &amp;B[i]); &#125; for (int i = 1; i &lt;= n; i++) &#123; scanf(&quot;%d&quot;, &amp;C[i]); cntc[C[i]]++; &#125; // 对数出现的次数，求一次前缀和 // 预处理前缀和 for (int i = 1; i &lt;= N; i++) &#123; // 前缀和的迭代次数不是 n, 而是题中出现的数的最大值 cnta[i] += cnta[i - 1]; &#125; for (int i = N; i &gt;= 1; i--) &#123; // 这里还需要注意前缀和的后缀和 cntc[i] += cntc[i + 1]; &#125; // 开始计算res LL res = 0; for (int i = 1; i &lt;= n; i++) &#123; res += (LL)cnta[B[i] - 1] * cntc[B[i] + 1]; &#125; cout &lt;&lt; res &lt;&lt; endl; return 0;&#125; 错误票据（考察数据读取）某涉密单位下发了某种票据，并要在年终全部收回。 每张票据有唯一的ID号。 全年所有票据的ID号是连续的，但ID的开始数码是随机选定的。 因为工作人员疏忽，在录入ID号的时候发生了一处错误，造成了某个ID断号，另外一个ID重号。 你的任务是通过编程，找出断号的ID和重号的ID。 假设断号不可能发生在最大和最小号。 输入格式 第一行包含整数 N，表示后面共有 N 行数据。 接下来 N 行，每行包含空格分开的若干个（不大于100个）正整数（不大于100000），每个整数代表一个ID号。 输出格式 要求程序输出1行，含两个整数 m,n用空格分隔。 其中，m表示断号ID，n表示重号ID。 数据范围 1≤N≤100 输入样例：12325 6 8 11 9 10 12 9 输出样例： 17 9 可以使用stringstream&#x3D;&#x3D;注意&#x3D;&#x3D; getline之前必须处理掉多余的换行符\\n 12345678910111213141516171819202122232425262728293031323334353637#include &lt;algorithm&gt;#include &lt;cstdio&gt;#include &lt;cstring&gt;#include &lt;iostream&gt;#include &lt;sstream&gt;using namespace std;const int N = 10010;int a[N];int main() &#123; // https://www.acwing.com/problem/content/1206/ int n, cnt = 0; cin &gt;&gt; n; string line; getline(cin, line); while (n--) &#123; getline(cin, line); stringstream ssin(line); while (ssin &gt;&gt; a[cnt]) cnt++; &#125; sort(a, a + cnt); // for (int i = 0;i &lt;cnt;i++) // cout &lt;&lt; a[i] &lt;&lt; &quot; &quot;; int res1, res2; for (int i = 1; i &lt; cnt; i++) &#123; if (a[i] == a[i - 1]) res1 = a[i]; else if (a[i] - a[i - 1] &gt; 1) res2 = a[i - 1] + 1; &#125; cout &lt;&lt; res2 &lt;&lt; &quot; &quot; &lt;&lt; res1; return 0;&#125; 直接忽略第一个数，读取到EOF123456789101112131415161718192021222324#include &lt;algorithm&gt;#include &lt;iostream&gt;using namespace std;int n;const int N = 1e5 + 10;int a[N];int main() &#123; // https://www.acwing.com/problem/content/1206/ cin &gt;&gt; n; int i = 0; while (cin &gt;&gt; a[i]) &#123; i++; &#125; sort(a, a + i); int duan, chong; for (int j = 0; j &lt; i; j++) &#123; if (a[j] == a[j + 1]) chong = a[j]; if (a[j] == a[j + 1] - 2) duan = a[j] + 1; &#125; cout &lt;&lt; duan &lt;&lt; &#x27; &#x27;; cout &lt;&lt; chong &lt;&lt; &#x27; &#x27;;&#125;","categories":[{"name":"算法","slug":"算法","permalink":"http://yoursite.com/categories/%E7%AE%97%E6%B3%95/"}],"tags":[{"name":"算法","slug":"算法","permalink":"http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"}]},{"title":"Markdown Style test","slug":"markdown","date":"2018-07-24T15:31:06.000Z","updated":"2023-05-02T16:18:22.929Z","comments":true,"path":"2018/07/24/markdown/","link":"","permalink":"http://yoursite.com/2018/07/24/markdown/","excerpt":"This post is originated from here and is used for testing markdown style. This post contains nearly every markdown usage. Make sure all the markdown elements below show up correctly.","text":"This post is originated from here and is used for testing markdown style. This post contains nearly every markdown usage. Make sure all the markdown elements below show up correctly.","categories":[],"tags":[{"name":"test","slug":"test","permalink":"http://yoursite.com/tags/test/"}]},{"title":"Tag Plugins","slug":"tag-plugins","date":"2013-12-24T16:14:39.000Z","updated":"2023-04-30T06:59:49.462Z","comments":true,"path":"2013/12/25/tag-plugins/","link":"","permalink":"http://yoursite.com/2013/12/25/tag-plugins/","excerpt":"","text":"This post is used for testing tag plugins. See docs for more info. Block QuoteNormal blockquote Praesent diam elit, interdum ut pulvinar placerat, imperdiet at magna. Quote from a bookDo not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy. David LevithanWide Awake Quote from TwitterNEW: DevDocs now comes with syntax highlighting. http://devdocs.io @DevDocstwitter.com/devdocs/status/356095192085962752 Quote from an article on the webEvery interaction is both precious and an opportunity to delight. Seth GodinWelcome to Island Marketing Code BlockNormal code block1alert(&#x27;Hello World!&#x27;); With captionArray.map1array.map(callback[, thisArg]) With caption and URL.compactUnderscore.js12.compact([0, 1, false, 2, ‘’, 3]);=&gt; [1, 2, 3] With marked linesLine 1,7-8,10 should be marked with different color. 1234567891011const http = require(&#x27;http&#x27;);const hostname = &#x27;127.0.0.1&#x27;;const port = 1337;http.createServer((req, res) =&gt; &#123; res.writeHead(200, &#123; &#x27;Content-Type&#x27;: &#x27;text/plain&#x27; &#125;); res.end(&#x27;Hello World\\n&#x27;);&#125;).listen(port, hostname, () =&gt; &#123; console.log(`Server running at http://$&#123;hostname&#125;:$&#123;port&#125;/`);&#125;); Note: Theme’s style should support .highlight.line.marked (recommend to use the selection or current line color). Gist jsFiddle PullquoteLeftLorem ipsum dolor sit amet, consectetur adipiscing elit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas tempus molestie arcu, et fringilla mauris placerat ac. Nullam luctus bibendum risus. Ut cursus sed ipsum feugiat egestas. Suspendisse elementum, velit eu consequat consequat, augue lorem dapibus libero, eget pulvinar dolor est sit amet nulla. Suspendisse a porta tortor, et posuere mi. Pellentesque ultricies, mi quis volutpat malesuada, erat felis vulputate nisl, ac congue ante tortor ut ante. Proin aliquam sem vel mauris tincidunt, eget scelerisque tortor euismod. Nulla tincidunt enim nec commodo dictum. Mauris id sapien et orci gravida luctus id ut dui. In vel vulputate odio. Duis vel turpis molestie, scelerisque enim eu, lobortis eros. Cras at ipsum gravida, sagittis ante vel, viverra tellus. Nunc mauris turpis, elementum ullamcorper nisl pretium, ultrices cursus justo. Mauris porttitor commodo eros, ac ornare orci interdum in. Cras fermentum cursus leo sed mattis. In dignissim lorem sem, sit amet elementum mauris venenatis ac. RightLorem ipsum dolor sit amet, consectetur adipiscing elit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed ligula justo, lobortis sit amet semper vel, dignissim sit amet libero. Praesent ac tempus ligula. Maecenas at gravida odio. Etiam tristique volutpat lacus eu faucibus. Donec non tempus arcu. Phasellus adipiscing, mauris nec mollis egestas, ipsum nunc auctor velit, et rhoncus lorem ipsum at ante. Praesent et sem in velit volutpat auctor. Duis vel mauris nulla. Maecenas mattis interdum ante, quis sagittis nibh cursus et. Nulla facilisi. Morbi convallis gravida tortor, ut fermentum enim gravida et. Nunc vel dictum nisl, non ultrices libero. Proin vestibulum felis eget orci consectetur lobortis. Vestibulum augue nulla, iaculis vitae augue vehicula, dignissim ultrices libero. Sed imperdiet urna et quam ultrices tincidunt nec ac magna. Etiam vel pharetra elit.","categories":[],"tags":[]},{"title":"sufingkeys常用使用说明","slug":"sufingkeys常用使用说明","date":"2013-12-24T15:30:09.000Z","updated":"2023-04-30T15:56:48.626Z","comments":true,"path":"2013/12/24/sufingkeys常用使用说明/","link":"","permalink":"http://yoursite.com/2013/12/24/sufingkeys%E5%B8%B8%E7%94%A8%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E/","excerpt":"","text":"normal模式 插入模式 j 向下混动 k 向上滚动 h 向左滚动 l 向右滚动 gg 定位到顶部 G 定位到底部 空格 快速翻页 &#x2F; 搜索页面内容 Ctrl+L Alt+d 光标定位到地址栏 gi 光标定位到搜索框 gf 在新标签页后台打开链接 f 展示页面中所有可以点击的链接，输入相应的字母回车进行跳转 x 关闭当前标签 X 恢复上一个关闭的标签 E 跳到左侧标签 R 跳到右侧标签 yt 复制当前标签页 yy 复制当前地址 yg 截屏 T 快速切换标签 b 搜索书签打开 n 下一处 N 上一处 on 打开新标签 zi 放大 zo 缩小 oh 打开搜索栏查找访问历史 ob 打开百度搜索栏og 打开谷歌搜索栏ow 打开必应搜索栏 sg 用谷歌搜索选中文本 sb 用百度搜索选中文本 sw 用必应搜索选中文本 ss 用stackoverflow搜索选中文本 sh 用github搜索选中文本 gd 打开下载 gh 打开历史记录 cc 打开选中的网址或系统剪贴板里的网址 了解vim的编辑方式 某些网站禁用surfingkeys Alt + s surfingkeys Blacklist","categories":[{"name":"use","slug":"use","permalink":"http://yoursite.com/categories/use/"}],"tags":[{"name":"浏览器插件","slug":"浏览器插件","permalink":"http://yoursite.com/tags/%E6%B5%8F%E8%A7%88%E5%99%A8%E6%8F%92%E4%BB%B6/"}]}],"categories":[{"name":"bugs","slug":"bugs","permalink":"http://yoursite.com/categories/bugs/"},{"name":"论文","slug":"论文","permalink":"http://yoursite.com/categories/%E8%AE%BA%E6%96%87/"},{"name":"算法","slug":"论文/算法","permalink":"http://yoursite.com/categories/%E8%AE%BA%E6%96%87/%E7%AE%97%E6%B3%95/"},{"name":"分类","slug":"分类","permalink":"http://yoursite.com/categories/%E5%88%86%E7%B1%BB/"},{"name":"算法","slug":"算法","permalink":"http://yoursite.com/categories/%E7%AE%97%E6%B3%95/"},{"name":"use","slug":"use","permalink":"http://yoursite.com/categories/use/"}],"tags":[{"name":"picgo","slug":"picgo","permalink":"http://yoursite.com/tags/picgo/"},{"name":"论文","slug":"论文","permalink":"http://yoursite.com/tags/%E8%AE%BA%E6%96%87/"},{"name":"mysql","slug":"mysql","permalink":"http://yoursite.com/tags/mysql/"},{"name":"标签名","slug":"标签名","permalink":"http://yoursite.com/tags/%E6%A0%87%E7%AD%BE%E5%90%8D/"},{"name":"算法","slug":"算法","permalink":"http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"},{"name":"test","slug":"test","permalink":"http://yoursite.com/tags/test/"},{"name":"浏览器插件","slug":"浏览器插件","permalink":"http://yoursite.com/tags/%E6%B5%8F%E8%A7%88%E5%99%A8%E6%8F%92%E4%BB%B6/"}]}